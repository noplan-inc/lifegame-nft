rules_version = '2';

function existingData() {
  return resource.data;
}
function incomingData() {
  return request.resource.data;
}

function isAuthenticated() {
  return request.auth != null;
}

function isUserAuthenticated(userId) {
  return request.auth != null && request.auth.uid == userId;
}

service cloud.firestore {
  match /databases/{database}/documents {
    function documentRef(paths) {
      return path([['databases', database, 'documents'].join('/'), paths.join('/')].join('/'));
    }

    function documentPath(paths) {
      return path(paths.join('/'));
    }

    match /nfts/{nft_id} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();

      match /bids/{bid_id} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
      }
    }
  }
}
